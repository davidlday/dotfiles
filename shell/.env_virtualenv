# Environment for virtualenvwrapper

if [ is-executable mkvirtualenv ]; then

  # Which python to use
  export VIRTUALENVWRAPPER_PYTHON="$(greadlink -f $(which python2))"

  # set where virutal environments will live
  export WORKON_HOME=$HOME/.virtualenvs

  # ensure all new environments are isolated from the site-packages directory
  export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'

  # use the same directory for virtualenvs as virtualenvwrapper
  export PIP_VIRTUALENV_BASE=$WORKON_HOME

  # makes pip detect an active virtualenv and install to it
  export PIP_RESPECT_VIRTUALENV=true

  # pip should only run if there is a virtualenv currently activated
  export PIP_REQUIRE_VIRTUALENV=true

  # Source virtualenvwrapper
  if [[ is-macos && -r /usr/local/bin/virtualenvwrapper.sh ]]; then
      source /usr/local/bin/virtualenvwrapper.sh
  else if [[]]
      echo "WARNING: Can't find virtualenvwrapper.sh"
  fi
  # Don't use site-wide packages
  export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
  # Default project directory
  export PROJECT_HOME=$HOME/Projects
fi
